apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      containers: 
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: PORT 
          value: "{{ .Values.env.PORT }}"
        - name: KAFKA_CONTENT_TOPIC_NAME 
          value: "{{ .Values.env.KAFKA_CONTENT_TOPIC_NAME }}"
        - name: KAFKA_METADATA_TOPIC_NAME 
          value: "{{ .Values.env.KAFKA_METADATA_TOPIC_NAME }}"
        - name: KAFKA_COMBINED_TOPIC_NAME
          value: "{{ .Values.env.KAFKA_COMBINED_TOPIC_NAME }}"
        - name: KAFKA_FORCED_COMBINED_TOPIC_NAME
          value: "{{ .Values.env.KAFKA_FORCED_COMBINED_TOPIC_NAME }}"
        - name: KAFKA_PROXY_CONTENT_CONSUMER_GROUP
          value: "{{ .Values.env.KAFKA_PROXY_CONTENT_CONSUMER_GROUP }}"
        - name: KAFKA_PROXY_METADATA_CONSUMER_GROUP 
          value: "{{ .Values.env.KAFKA_PROXY_METADATA_CONSUMER_GROUP }}"
        - name: DOCUMENT_STORE_BASE_URL
          value: "{{ .Values.env.DOCUMENT_STORE_BASE_URL }}"
        - name: DOCUMENT_STORE_API_ENDPOINT 
          value: "{{ .Values.env.DOCUMENT_STORE_API_ENDPOINT }}"
        - name: PUBLIC_ANNOTATIONS_API_BASE_URL 
          value: "{{ .Values.env.PUBLIC_ANNOTATIONS_API_BASE_URL }}"
        - name: PUBLIC_ANNOTATIONS_API_ENDPOINT 
          value: "{{ .Values.env.PUBLIC_ANNOTATIONS_API_ENDPOINT }}"
        - name: WHITELISTED_METADATA_ORIGIN_SYSTEM_HEADERS
          value: "{{ .Values.env.WHITELISTED_METADATA_ORIGIN_SYSTEM_HEADERS }}"
        - name: WHITELISTED_CONTENT_URIS
          value: "{{ .Values.env.WHITELISTED_CONTENT_URIS }}"
        - name: WHITELISTED_CONTENT_TYPES
          value: "{{ .Values.env.WHITELISTED_CONTENT_TYPES }}"
        - name: KAFKA_PROXY_ADDR
          valueFrom: 
            configMapKeyRef: 
              name: global-config
              key: kafka-msk.proxy.url.with.protocol
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 10 
        readinessProbe: 
          httpGet: 
            path: "/__gtg" 
            port: 8080 
          initialDelaySeconds: 15 
          periodSeconds: 30 
        resources: 
{{ toYaml .Values.resources | indent 12 }}

